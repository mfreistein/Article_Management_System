# This is a basic workflow to help you get started with Actions

name: FST_Excercise

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Overview
        run: |
          #echo Add other actions to build,
          #echo test, and deploy your project.
          echo What is in this directory?
          ls
          echo
          #echo Virtual Environment
          #cd Environment
          #source AMS_env/bin/activate
          #echo
          echo Pip Install Pylint
          pip install pylint
          echo
          echo Pylint Login
          cd src
          pylint Login.py
          echo
          echo Pylint Main
          pylint Main.py
          echo
          echo Pylint Conception
          cd Conception
          pylint View.py
          pylint Model.py
          pylint Controller.py
          echo
          echo Pip Install Flake8
          cd ..
          pip install flake8
          echo
          echo flake8 Login
          flake8 Login.py
          echo
          echo flake8 Main
          flake8 Main.py
          echo
          echo flake8 Conception
          cd Conception
          flake8 View.py
          flake8 Model.py
          flake8 Controller.py
          echo
          #echo UnitTests
          python -m unittest View_tests.TestView.print_invalid_input
          #python -m unittest Model_tests.TestModel.def test_get_article_suggestion_by_id
          #python -m unittest Model_tests.TestModel.test_filter_articles_by_title
          #python -m unittest Model_tests.TestModel.test_filter_contributors_by_last_name
          #echo
